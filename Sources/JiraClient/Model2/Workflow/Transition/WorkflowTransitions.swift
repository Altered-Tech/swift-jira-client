//
// WorkflowTransitions.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** The transitions of the workflow. Note that a transition can have either the deprecated &#x60;to&#x60;/&#x60;from&#x60; fields or the &#x60;toStatusReference&#x60;/&#x60;links&#x60; fields, but never both nor a combination. */

public struct WorkflowTransitions: Codable {

    public enum ModelType: String, Codable { 
        case initial = "INITIAL"
        case global = "GLOBAL"
        case directed = "DIRECTED"
    }
    /** The post-functions of the transition. */
    public var actions: [WorkflowRuleConfiguration]?
    public var conditions: ConditionGroupConfiguration?
    /** The custom event ID of the transition. */
    public var customIssueEventId: String?
    /** The description of the transition. */
    public var _description: String?
    /** The statuses and ports that the transition can start from. This field is deprecated - use &#x60;toStatusReference&#x60;/&#x60;links&#x60; instead. */
    public var from: [WorkflowStatusAndPort]?
    /** The ID of the transition. */
    public var _id: String?
    /** The statuses the transition can start from, and the mapping of ports between the statuses. */
    public var links: [WorkflowTransitionLinks]?
    /** The name of the transition. */
    public var name: String?
    /** The properties of the transition. */
    public var properties: [String:String]?
    public var to: WorkflowStatusAndPort?
    /** The status the transition goes to. */
    public var toStatusReference: String?
    public var transitionScreen: WorkflowRuleConfiguration?
    /** The triggers of the transition. */
    public var triggers: [WorkflowTrigger]?
    /** The transition type. */
    public var type: ModelType?
    /** The validators of the transition. */
    public var validators: [WorkflowRuleConfiguration]?

    public init(actions: [WorkflowRuleConfiguration]? = nil, conditions: ConditionGroupConfiguration? = nil, customIssueEventId: String? = nil, _description: String? = nil, from: [WorkflowStatusAndPort]? = nil, _id: String? = nil, links: [WorkflowTransitionLinks]? = nil, name: String? = nil, properties: [String:String]? = nil, to: WorkflowStatusAndPort? = nil, toStatusReference: String? = nil, transitionScreen: WorkflowRuleConfiguration? = nil, triggers: [WorkflowTrigger]? = nil, type: ModelType? = nil, validators: [WorkflowRuleConfiguration]? = nil) {
        self.actions = actions
        self.conditions = conditions
        self.customIssueEventId = customIssueEventId
        self._description = _description
        self.from = from
        self._id = _id
        self.links = links
        self.name = name
        self.properties = properties
        self.to = to
        self.toStatusReference = toStatusReference
        self.transitionScreen = transitionScreen
        self.triggers = triggers
        self.type = type
        self.validators = validators
    }

    public enum CodingKeys: String, CodingKey { 
        case actions
        case conditions
        case customIssueEventId
        case _description = "description"
        case from
        case _id = "id"
        case links
        case name
        case properties
        case to
        case toStatusReference
        case transitionScreen
        case triggers
        case type
        case validators
    }

}
