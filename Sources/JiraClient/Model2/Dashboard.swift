//
// Dashboard.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Details of a dashboard. */

public struct Dashboard: Codable {

    /** The automatic refresh interval for the dashboard in milliseconds. */
    public var automaticRefreshMs: Int?
    public var _description: String?
    /** The details of any edit share permissions for the dashboard. */
    public var editPermissions: [SharePermission]?
    /** The ID of the dashboard. */
    public var _id: String?
    /** Whether the dashboard is selected as a favorite by the user. */
    public var isFavourite: Bool?
    /** Whether the current user has permission to edit the dashboard. */
    public var isWritable: Bool?
    /** The name of the dashboard. */
    public var name: String?
    /** The owner of the dashboard. */
    public var owner: AllOfDashboardOwner?
    /** The number of users who have this dashboard as a favorite. */
    public var popularity: Int64?
    /** The rank of this dashboard. */
    public var rank: Int?
    /** The URL of these dashboard details. */
    public var _self: String?
    /** The details of any view share permissions for the dashboard. */
    public var sharePermissions: [SharePermission]?
    /** Whether the current dashboard is system dashboard. */
    public var systemDashboard: Bool?
    /** The URL of the dashboard. */
    public var view: String?

    public init(automaticRefreshMs: Int? = nil, _description: String? = nil, editPermissions: [SharePermission]? = nil, _id: String? = nil, isFavourite: Bool? = nil, isWritable: Bool? = nil, name: String? = nil, owner: AllOfDashboardOwner? = nil, popularity: Int64? = nil, rank: Int? = nil, _self: String? = nil, sharePermissions: [SharePermission]? = nil, systemDashboard: Bool? = nil, view: String? = nil) {
        self.automaticRefreshMs = automaticRefreshMs
        self._description = _description
        self.editPermissions = editPermissions
        self._id = _id
        self.isFavourite = isFavourite
        self.isWritable = isWritable
        self.name = name
        self.owner = owner
        self.popularity = popularity
        self.rank = rank
        self._self = _self
        self.sharePermissions = sharePermissions
        self.systemDashboard = systemDashboard
        self.view = view
    }

    public enum CodingKeys: String, CodingKey { 
        case automaticRefreshMs
        case _description = "description"
        case editPermissions
        case _id = "id"
        case isFavourite
        case isWritable
        case name
        case owner
        case popularity
        case rank
        case _self = "self"
        case sharePermissions
        case systemDashboard
        case view
    }

}
