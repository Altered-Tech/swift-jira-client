//
// Filter.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Details about a filter. */

public struct Filter: Codable {

    /** \\[Experimental\\] Approximate last used time. Returns the date and time when the filter was last used. Returns &#x60;null&#x60; if the filter hasn&#x27;t been used after tracking was enabled. For performance reasons, timestamps aren&#x27;t updated in real time and therefore may not be exactly accurate. */
    public var approximateLastUsed: Date?
    /** A description of the filter. */
    public var _description: String?
    /** The groups and projects that can edit the filter. */
    public var editPermissions: [SharePermission]?
    /** Whether the filter is selected as a favorite. */
    public var favourite: Bool?
    /** The count of how many users have selected this filter as a favorite, including the filter owner. */
    public var favouritedCount: Int64?
    /** The unique identifier for the filter. */
    public var _id: String?
    /** The JQL query for the filter. For example, *project &#x3D; SSP AND issuetype &#x3D; Bug*. */
    public var jql: String?
    /** The name of the filter. Must be unique. */
    public var name: String
    /** The user who owns the filter. This is defaulted to the creator of the filter, however Jira administrators can change the owner of a shared filter in the admin settings. */
    public var owner: AllOfFilterOwner?
    /** A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-2-filter-search-get) operation with the filter&#x27;s JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/2/search?jql&#x3D;project+%3D+SSP+AND+issuetype+%3D+Bug*. */
    public var searchUrl: String?
    /** The URL of the filter. */
    public var _self: String?
    /** The groups and projects that the filter is shared with. */
    public var sharePermissions: [SharePermission]?
    /** A paginated list of the users that the filter is shared with. This includes users that are members of the groups or can browse the projects that the filter is shared with. */
    public var sharedUsers: AllOfFilterSharedUsers?
    /** A paginated list of the users that are subscribed to the filter. */
    public var subscriptions: AllOfFilterSubscriptions?
    /** A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter&#x3D;10100*. */
    public var viewUrl: String?

    public init(approximateLastUsed: Date? = nil, _description: String? = nil, editPermissions: [SharePermission]? = nil, favourite: Bool? = nil, favouritedCount: Int64? = nil, _id: String? = nil, jql: String? = nil, name: String, owner: AllOfFilterOwner? = nil, searchUrl: String? = nil, _self: String? = nil, sharePermissions: [SharePermission]? = nil, sharedUsers: AllOfFilterSharedUsers? = nil, subscriptions: AllOfFilterSubscriptions? = nil, viewUrl: String? = nil) {
        self.approximateLastUsed = approximateLastUsed
        self._description = _description
        self.editPermissions = editPermissions
        self.favourite = favourite
        self.favouritedCount = favouritedCount
        self._id = _id
        self.jql = jql
        self.name = name
        self.owner = owner
        self.searchUrl = searchUrl
        self._self = _self
        self.sharePermissions = sharePermissions
        self.sharedUsers = sharedUsers
        self.subscriptions = subscriptions
        self.viewUrl = viewUrl
    }

    public enum CodingKeys: String, CodingKey { 
        case approximateLastUsed
        case _description = "description"
        case editPermissions
        case favourite
        case favouritedCount
        case _id = "id"
        case jql
        case name
        case owner
        case searchUrl
        case _self = "self"
        case sharePermissions
        case sharedUsers
        case subscriptions
        case viewUrl
    }

}
