//
// UpdateProjectDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Details about the project. */

public struct UpdateProjectDetails: Codable {

    public enum AssigneeType: String, Codable { 
        case projectLead = "PROJECT_LEAD"
        case unassigned = "UNASSIGNED"
    }
    /** The default assignee when creating issues for this project. */
    public var assigneeType: AssigneeType?
    /** An integer value for the project&#x27;s avatar. */
    public var avatarId: Int64?
    /** The ID of the project&#x27;s category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-2-projectCategory-get) operation. To remove the project category from the project, set the value to &#x60;-1.&#x60; */
    public var categoryId: Int64?
    /** A brief description of the project. */
    public var _description: String?
    /** The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-2-issuesecurityschemes-get) resource to get all issue security scheme IDs. */
    public var issueSecurityScheme: Int64?
    /** Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters. */
    public var key: String?
    /** This parameter is deprecated because of privacy changes. Use &#x60;leadAccountId&#x60; instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Cannot be provided with &#x60;leadAccountId&#x60;. */
    public var lead: String?
    /** The account ID of the project lead. Cannot be provided with &#x60;lead&#x60;. */
    public var leadAccountId: String?
    /** The name of the project. */
    public var name: String?
    /** The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-2-notificationscheme-get) resource to get a list of notification scheme IDs. */
    public var notificationScheme: Int64?
    /** The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-2-permissionscheme-get) resource to see a list of all permission scheme IDs. */
    public var permissionScheme: Int64?
    /** Previous project keys to be released from the current project. Released keys must belong to the current project and not contain the current project key */
    public var releasedProjectKeys: [String]?
    /** A link to information about this project, such as project documentation */
    public var url: String?

    public init(assigneeType: AssigneeType? = nil, avatarId: Int64? = nil, categoryId: Int64? = nil, _description: String? = nil, issueSecurityScheme: Int64? = nil, key: String? = nil, lead: String? = nil, leadAccountId: String? = nil, name: String? = nil, notificationScheme: Int64? = nil, permissionScheme: Int64? = nil, releasedProjectKeys: [String]? = nil, url: String? = nil) {
        self.assigneeType = assigneeType
        self.avatarId = avatarId
        self.categoryId = categoryId
        self._description = _description
        self.issueSecurityScheme = issueSecurityScheme
        self.key = key
        self.lead = lead
        self.leadAccountId = leadAccountId
        self.name = name
        self.notificationScheme = notificationScheme
        self.permissionScheme = permissionScheme
        self.releasedProjectKeys = releasedProjectKeys
        self.url = url
    }

    public enum CodingKeys: String, CodingKey { 
        case assigneeType
        case avatarId
        case categoryId
        case _description = "description"
        case issueSecurityScheme
        case key
        case lead
        case leadAccountId
        case name
        case notificationScheme
        case permissionScheme
        case releasedProjectKeys
        case url
    }

}
