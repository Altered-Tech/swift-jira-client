//
// SearchAndReconcileRequestBean.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct SearchAndReconcileRequestBean: Codable {

    /** Use [expand](em&gt;#expansion) to include additional information about issues in the response. Note that, unlike the majority of instances where &#x60;expand&#x60; is specified, &#x60;expand&#x60; is defined as a list of values. The expand options are:   *  &#x60;renderedFields&#x60; Returns field values rendered in HTML format.  *  &#x60;names&#x60; Returns the display name of each field.  *  &#x60;schema&#x60; Returns the schema describing a field type.  *  &#x60;changelog&#x60; Returns a list of recent updates to an issue, sorted by date, starting from the most recent. */
    public var expand: String?
    /** A list of fields to return for each issue. Use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:   *  &#x60;*all&#x60; Returns all fields.  *  &#x60;*navigable&#x60; Returns navigable fields.  *  &#x60;id&#x60; Returns only issue IDs.  *  Any issue field, prefixed with a dash to exclude.  The default is &#x60;id&#x60;.  Examples:   *  &#x60;summary,comment&#x60; Returns the summary and comments fields only.  *  &#x60;*all,-comment&#x60; Returns all fields except comments.  Multiple &#x60;fields&#x60; parameters can be included in a request.  Note: By default, this resource returns IDs only. This differs from [GET issue](#api-rest-api-2-issue-issueIdOrKey-get) where the default is all fields. */
    public var fields: [String]?
    /** Reference fields by their key (rather than ID). The default is &#x60;false&#x60;. */
    public var fieldsByKeys: Bool?
    /** A [JQL](https://confluence.atlassian.com/x/egORLQ) expression. For performance reasons, this field requires a bounded query. A bounded query is a query with a search restriction.   *  Example of an unbounded query: &#x60;order by key desc&#x60;.  *  Example of a bounded query: &#x60;assignee &#x3D; currentUser() order by key&#x60;. */
    public var jql: String?
    /** The maximum number of items to return. Depending on search criteria, real number of items returned may be smaller. */
    public var maxResults: Int?
    /** The continuation token to fetch the next page. This token is provided by the response of this endpoint. */
    public var nextPageToken: String?
    /** A list of up to 5 issue properties to include in the results. This parameter accepts a comma-separated list. */
    public var properties: [String]?
    /** Strong consistency issue ids to be reconciled with search results. Accepts max 50 ids. All issues must exist. */
    public var reconcileIssues: [Int64]?

    public init(expand: String? = nil, fields: [String]? = nil, fieldsByKeys: Bool? = nil, jql: String? = nil, maxResults: Int? = nil, nextPageToken: String? = nil, properties: [String]? = nil, reconcileIssues: [Int64]? = nil) {
        self.expand = expand
        self.fields = fields
        self.fieldsByKeys = fieldsByKeys
        self.jql = jql
        self.maxResults = maxResults
        self.nextPageToken = nextPageToken
        self.properties = properties
        self.reconcileIssues = reconcileIssues
    }


}
