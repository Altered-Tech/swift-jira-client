//
// Field.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Details of a field. */

public struct Field: Codable {

    /** Number of contexts where the field is used. */
    public var contextsCount: Int64?
    /** The description of the field. */
    public var _description: String?
    /** The ID of the field. */
    public var _id: String
    /** Whether the field is locked. */
    public var isLocked: Bool?
    /** Whether the field is shown on screen or not. */
    public var isUnscreenable: Bool?
    /** The key of the field. */
    public var key: String?
    public var lastUsed: FieldLastUsed?
    /** The name of the field. */
    public var name: String
    /** Number of projects where the field is used. */
    public var projectsCount: Int64?
    public var schema: JsonTypeBean
    /** Number of screens where the field is used. */
    public var screensCount: Int64?
    /** The searcher key of the field. Returned for custom fields. */
    public var searcherKey: String?
    /** The stable ID of the field. */
    public var stableId: String?

    public init(contextsCount: Int64? = nil, _description: String? = nil, _id: String, isLocked: Bool? = nil, isUnscreenable: Bool? = nil, key: String? = nil, lastUsed: FieldLastUsed? = nil, name: String, projectsCount: Int64? = nil, schema: JsonTypeBean, screensCount: Int64? = nil, searcherKey: String? = nil, stableId: String? = nil) {
        self.contextsCount = contextsCount
        self._description = _description
        self._id = _id
        self.isLocked = isLocked
        self.isUnscreenable = isUnscreenable
        self.key = key
        self.lastUsed = lastUsed
        self.name = name
        self.projectsCount = projectsCount
        self.schema = schema
        self.screensCount = screensCount
        self.searcherKey = searcherKey
        self.stableId = stableId
    }

    public enum CodingKeys: String, CodingKey { 
        case contextsCount
        case _description = "description"
        case _id = "id"
        case isLocked
        case isUnscreenable
        case key
        case lastUsed
        case name
        case projectsCount
        case schema
        case screensCount
        case searcherKey
        case stableId
    }

}
