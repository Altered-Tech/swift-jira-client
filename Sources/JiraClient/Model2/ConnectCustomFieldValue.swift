//
// ConnectCustomFieldValue.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** A list of custom field details. */

public struct ConnectCustomFieldValue: Codable {

    public enum ModelType: String, Codable { 
        case stringIssueField = "StringIssueField"
        case numberIssueField = "NumberIssueField"
        case richTextIssueField = "RichTextIssueField"
        case singleSelectIssueField = "SingleSelectIssueField"
        case multiSelectIssueField = "MultiSelectIssueField"
        case textIssueField = "TextIssueField"
    }
    /** The type of custom field. */
    public var type: ModelType
    /** The custom field ID. */
    public var fieldID: Int
    /** The issue ID. */
    public var issueID: Int
    /** The value of number type custom field when &#x60;_type&#x60; is &#x60;NumberIssueField&#x60;. */
    public var number: Decimal?
    /** The value of single select and multiselect custom field type when &#x60;_type&#x60; is &#x60;SingleSelectIssueField&#x60; or &#x60;MultiSelectIssueField&#x60;. */
    public var optionID: String?
    /** The value of richText type custom field when &#x60;_type&#x60; is &#x60;RichTextIssueField&#x60;. */
    public var richText: String?
    /** The value of string type custom field when &#x60;_type&#x60; is &#x60;StringIssueField&#x60;. */
    public var string: String?
    /** The value of of text custom field type when &#x60;_type&#x60; is &#x60;TextIssueField&#x60;. */
    public var text: String?

    public init(type: ModelType, fieldID: Int, issueID: Int, number: Decimal? = nil, optionID: String? = nil, richText: String? = nil, string: String? = nil, text: String? = nil) {
        self.type = type
        self.fieldID = fieldID
        self.issueID = issueID
        self.number = number
        self.optionID = optionID
        self.richText = richText
        self.string = string
        self.text = text
    }

    public enum CodingKeys: String, CodingKey { 
        case type = "_type"
        case fieldID
        case issueID
        case number
        case optionID
        case richText
        case string
        case text
    }

}
