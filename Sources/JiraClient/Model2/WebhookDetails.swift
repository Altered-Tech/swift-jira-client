//
// WebhookDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** A list of webhooks. */

public struct WebhookDetails: Codable {

    public enum Events: String, Codable { 
        case jiraIssueCreated = "jira:issue_created"
        case jiraIssueUpdated = "jira:issue_updated"
        case jiraIssueDeleted = "jira:issue_deleted"
        case commentCreated = "comment_created"
        case commentUpdated = "comment_updated"
        case commentDeleted = "comment_deleted"
        case issuePropertySet = "issue_property_set"
        case issuePropertyDeleted = "issue_property_deleted"
    }
    /** The Jira events that trigger the webhook. */
    public var events: [Events]
    /** A list of field IDs. When the issue changelog contains any of the fields, the webhook &#x60;jira:issue_updated&#x60; is sent. If this parameter is not present, the app is notified about all field updates. */
    public var fieldIdsFilter: [String]?
    /** A list of issue property keys. A change of those issue properties triggers the &#x60;issue_property_set&#x60; or &#x60;issue_property_deleted&#x60; webhooks. If this parameter is not present, the app is notified about all issue property updates. */
    public var issuePropertyKeysFilter: [String]?
    /** The JQL filter that specifies which issues the webhook is sent for. Only a subset of JQL can be used. The supported elements are:   *  Fields: &#x60;issueKey&#x60;, &#x60;project&#x60;, &#x60;issuetype&#x60;, &#x60;status&#x60;, &#x60;assignee&#x60;, &#x60;reporter&#x60;, &#x60;issue.property&#x60;, and &#x60;cf[id]&#x60;. For custom fields (&#x60;cf[id]&#x60;), only the epic label custom field is supported.\&quot;.  *  Operators: &#x60;&#x3D;&#x60;, &#x60;!&#x3D;&#x60;, &#x60;IN&#x60;, and &#x60;NOT IN&#x60;. */
    public var jqlFilter: String

    public init(events: [Events], fieldIdsFilter: [String]? = nil, issuePropertyKeysFilter: [String]? = nil, jqlFilter: String) {
        self.events = events
        self.fieldIdsFilter = fieldIdsFilter
        self.issuePropertyKeysFilter = issuePropertyKeysFilter
        self.jqlFilter = jqlFilter
    }


}
