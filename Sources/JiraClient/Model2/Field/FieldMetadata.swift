//
// FieldMetadata.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** The metadata describing an issue field. */

public struct FieldMetadata {

    /** The list of values allowed in the field. */
    public let allowedValues: [Any]?
    /** The URL that can be used to automatically complete the field. */
    public let autoCompleteUrl: String?
    /** The configuration properties. */
    public let configuration: [String:Any]?
    /** The default value of the field. */
    public let defaultValue: (any Sendable)?
    /** Whether the field has a default value. */
    public let hasDefaultValue: Bool?
    /** The key of the field. */
    public let key: String
    /** The name of the field. */
    public let name: String
    /** The list of operations that can be performed on the field. */
    public let operations: [String]
    /** Whether the field is required. */
    public let _required: Bool
    /** The data type of the field. */
    public let schema: JsonTypeBean

    public init(allowedValues: [Any]? = nil, autoCompleteUrl: String? = nil, configuration: [String:Any]? = nil, defaultValue: (any Sendable)? = nil, hasDefaultValue: Bool? = nil, key: String, name: String, operations: [String], _required: Bool, schema: JsonTypeBean) {
        self.allowedValues = allowedValues
        self.autoCompleteUrl = autoCompleteUrl
        self.configuration = configuration
        self.defaultValue = defaultValue
        self.hasDefaultValue = hasDefaultValue
        self.key = key
        self.name = name
        self.operations = operations
        self._required = _required
        self.schema = schema
    }

    internal init(client: Components.Schemas.FieldMetadata) {
        self.allowedValues = client.allowedValues.unsafelyUnwrapped
        self.autoCompleteUrl = client.autoCompleteUrl
        self.configuration = client.configuration.unsafelyUnwrapped.additionalProperties
        self.defaultValue = client.defaultValue?.value
        self.hasDefaultValue = client.hasDefaultValue
        self.key = client.key
        self.name = client.name
        self.operations = client.operations
        self._required = client.required
        self.schema = JsonTypeBean(client: client.schema.value1)
    }
}
