//
// CompoundClause.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** A JQL query clause that consists of nested clauses. For example, &#x60;(labels in (urgent, blocker) OR lastCommentedBy &#x3D; currentUser()). Note that, where nesting is not defined, the parser nests JQL clauses based on the operator precedence. For example, \&quot;A OR B AND C\&quot; is parsed as \&quot;(A OR B) AND C\&quot;. See Setting the precedence of operators for more information about precedence in JQL queries.&#x60; */

public struct CompoundClause {

    public enum Operator: String, Codable { 
        case and = "and"
        case or = "or"
        case not = "not"
    }
    /** The list of nested clauses. */
    public var clauses: [JqlQueryClause]
    /** The operator between the clauses. */
    public var _operator: Operator

    public init(clauses: [JqlQueryClause], _operator: Operator) {
        self.clauses = clauses
        self._operator = _operator
    }

    public enum CodingKeys: String, CodingKey { 
        case clauses
        case _operator = "operator"
    }

}
