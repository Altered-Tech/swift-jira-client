//
// AuditRecordBean.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** An audit record. */

public struct AuditRecordBean {

    /** The list of items associated with the changed record. */
    public var associatedItems: [AssociatedItemBean]?
    /** Deprecated, use &#x60;authorAccountId&#x60; instead. The key of the user who created the audit record. */
    public var authorKey: String?
    /** The category of the audit record. For a list of these categories, see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM). */
    public var category: String?
    /** The list of values changed in the record event. */
    public var changedValues: [ChangedValueBean]?
    /** The date and time on which the audit record was created. */
    public var created: Date?
    /** The description of the audit record. */
    public var _description: String?
    /** The event the audit record originated from. */
    public var eventSource: String?
    /** The ID of the audit record. */
    public var _id: Int64?
    public var objectItem: AssociatedItemBean?
    /** The URL of the computer where the creation of the audit record was initiated. */
    public var remoteAddress: String?
    /** The summary of the audit record. */
    public var summary: String?

    public init(associatedItems: [AssociatedItemBean]? = nil, authorKey: String? = nil, category: String? = nil, changedValues: [ChangedValueBean]? = nil, created: Date? = nil, _description: String? = nil, eventSource: String? = nil, _id: Int64? = nil, objectItem: AssociatedItemBean? = nil, remoteAddress: String? = nil, summary: String? = nil) {
        self.associatedItems = associatedItems
        self.authorKey = authorKey
        self.category = category
        self.changedValues = changedValues
        self.created = created
        self._description = _description
        self.eventSource = eventSource
        self._id = _id
        self.objectItem = objectItem
        self.remoteAddress = remoteAddress
        self.summary = summary
    }

    public enum CodingKeys: String, CodingKey { 
        case associatedItems
        case authorKey
        case category
        case changedValues
        case created
        case _description = "description"
        case eventSource
        case _id = "id"
        case objectItem
        case remoteAddress
        case summary
    }

}
